/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_RRC_PhysicalCellGroupConfig_H_
#define	_RRC_PhysicalCellGroupConfig_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include "RRC_P-Max.h"
#include "RRC_RNTI-Value.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum RRC_PhysicalCellGroupConfig__harq_ACK_SpatialBundlingPUCCH {
	RRC_PhysicalCellGroupConfig__harq_ACK_SpatialBundlingPUCCH_true	= 0
} e_RRC_PhysicalCellGroupConfig__harq_ACK_SpatialBundlingPUCCH;
typedef enum RRC_PhysicalCellGroupConfig__harq_ACK_SpatialBundlingPUSCH {
	RRC_PhysicalCellGroupConfig__harq_ACK_SpatialBundlingPUSCH_true	= 0
} e_RRC_PhysicalCellGroupConfig__harq_ACK_SpatialBundlingPUSCH;
typedef enum RRC_PhysicalCellGroupConfig__pdsch_HARQ_ACK_Codebook {
	RRC_PhysicalCellGroupConfig__pdsch_HARQ_ACK_Codebook_semiStatic	= 0,
	RRC_PhysicalCellGroupConfig__pdsch_HARQ_ACK_Codebook_dynamic	= 1
} e_RRC_PhysicalCellGroupConfig__pdsch_HARQ_ACK_Codebook;
typedef enum RRC_PhysicalCellGroupConfig__ext2__xScale {
	RRC_PhysicalCellGroupConfig__ext2__xScale_dB0	= 0,
	RRC_PhysicalCellGroupConfig__ext2__xScale_dB6	= 1,
	RRC_PhysicalCellGroupConfig__ext2__xScale_spare2	= 2,
	RRC_PhysicalCellGroupConfig__ext2__xScale_spare1	= 3
} e_RRC_PhysicalCellGroupConfig__ext2__xScale;

/* Forward declarations */
struct RRC_SetupRelease_RNTI_Value;
struct RRC_SetupRelease_PDCCH_BlindDetection;

/* RRC_PhysicalCellGroupConfig */
typedef struct RRC_PhysicalCellGroupConfig {
	long	*harq_ACK_SpatialBundlingPUCCH;	/* OPTIONAL */
	long	*harq_ACK_SpatialBundlingPUSCH;	/* OPTIONAL */
	RRC_P_Max_t	*p_NR_FR1;	/* OPTIONAL */
	long	 pdsch_HARQ_ACK_Codebook;
	RRC_RNTI_Value_t	*tpc_SRS_RNTI;	/* OPTIONAL */
	RRC_RNTI_Value_t	*tpc_PUCCH_RNTI;	/* OPTIONAL */
	RRC_RNTI_Value_t	*tpc_PUSCH_RNTI;	/* OPTIONAL */
	RRC_RNTI_Value_t	*sp_CSI_RNTI;	/* OPTIONAL */
	struct RRC_SetupRelease_RNTI_Value	*cs_RNTI;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct RRC_PhysicalCellGroupConfig__ext1 {
		RRC_RNTI_Value_t	*mcs_C_RNTI;	/* OPTIONAL */
		RRC_P_Max_t	*p_UE_FR1;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct RRC_PhysicalCellGroupConfig__ext2 {
		long	*xScale;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct RRC_PhysicalCellGroupConfig__ext3 {
		struct RRC_SetupRelease_PDCCH_BlindDetection	*pdcch_BlindDetection;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} RRC_PhysicalCellGroupConfig_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_harq_ACK_SpatialBundlingPUCCH_2;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_harq_ACK_SpatialBundlingPUSCH_4;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_pdsch_HARQ_ACK_Codebook_7;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_xScale_20;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_RRC_PhysicalCellGroupConfig;
extern asn_SEQUENCE_specifics_t asn_SPC_RRC_PhysicalCellGroupConfig_specs_1;
extern asn_TYPE_member_t asn_MBR_RRC_PhysicalCellGroupConfig_1[12];

#ifdef __cplusplus
}
#endif

#endif	/* _RRC_PhysicalCellGroupConfig_H_ */
#include <asn_internal.h>
