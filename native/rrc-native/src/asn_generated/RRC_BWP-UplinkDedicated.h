/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_RRC_BWP_UplinkDedicated_H_
#define	_RRC_BWP_UplinkDedicated_H_


#include <asn_application.h>

/* Including external dependencies */
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct RRC_SetupRelease_PUCCH_Config;
struct RRC_SetupRelease_PUSCH_Config;
struct RRC_SetupRelease_ConfiguredGrantConfig;
struct RRC_SetupRelease_SRS_Config;
struct RRC_SetupRelease_BeamFailureRecoveryConfig;

/* RRC_BWP-UplinkDedicated */
typedef struct RRC_BWP_UplinkDedicated {
	struct RRC_SetupRelease_PUCCH_Config	*pucch_Config;	/* OPTIONAL */
	struct RRC_SetupRelease_PUSCH_Config	*pusch_Config;	/* OPTIONAL */
	struct RRC_SetupRelease_ConfiguredGrantConfig	*configuredGrantConfig;	/* OPTIONAL */
	struct RRC_SetupRelease_SRS_Config	*srs_Config;	/* OPTIONAL */
	struct RRC_SetupRelease_BeamFailureRecoveryConfig	*beamFailureRecoveryConfig;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} RRC_BWP_UplinkDedicated_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_RRC_BWP_UplinkDedicated;
extern asn_SEQUENCE_specifics_t asn_SPC_RRC_BWP_UplinkDedicated_specs_1;
extern asn_TYPE_member_t asn_MBR_RRC_BWP_UplinkDedicated_1[5];

#ifdef __cplusplus
}
#endif

#endif	/* _RRC_BWP_UplinkDedicated_H_ */
#include <asn_internal.h>
