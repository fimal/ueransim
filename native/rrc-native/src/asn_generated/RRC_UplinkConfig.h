/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_RRC_UplinkConfig_H_
#define	_RRC_UplinkConfig_H_


#include <asn_application.h>

/* Including external dependencies */
#include "RRC_BWP-Id.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <BOOLEAN.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct RRC_BWP_UplinkDedicated;
struct RRC_SetupRelease_PUSCH_ServingCellConfig;
struct RRC_SetupRelease_SRS_CarrierSwitching;
struct RRC_BWP_Uplink;
struct RRC_SCS_SpecificCarrier;

/* RRC_UplinkConfig */
typedef struct RRC_UplinkConfig {
	struct RRC_BWP_UplinkDedicated	*initialUplinkBWP;	/* OPTIONAL */
	struct RRC_UplinkConfig__uplinkBWP_ToReleaseList {
		A_SEQUENCE_OF(RRC_BWP_Id_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *uplinkBWP_ToReleaseList;
	struct RRC_UplinkConfig__uplinkBWP_ToAddModList {
		A_SEQUENCE_OF(struct RRC_BWP_Uplink) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *uplinkBWP_ToAddModList;
	RRC_BWP_Id_t	*firstActiveUplinkBWP_Id;	/* OPTIONAL */
	struct RRC_SetupRelease_PUSCH_ServingCellConfig	*pusch_ServingCellConfig;	/* OPTIONAL */
	struct RRC_SetupRelease_SRS_CarrierSwitching	*carrierSwitching;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct RRC_UplinkConfig__ext1 {
		BOOLEAN_t	*powerBoostPi2BPSK;	/* OPTIONAL */
		struct RRC_UplinkConfig__ext1__uplinkChannelBW_PerSCS_List {
			A_SEQUENCE_OF(struct RRC_SCS_SpecificCarrier) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *uplinkChannelBW_PerSCS_List;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} RRC_UplinkConfig_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_RRC_UplinkConfig;
extern asn_SEQUENCE_specifics_t asn_SPC_RRC_UplinkConfig_specs_1;
extern asn_TYPE_member_t asn_MBR_RRC_UplinkConfig_1[7];

#ifdef __cplusplus
}
#endif

#endif	/* _RRC_UplinkConfig_H_ */
#include <asn_internal.h>
