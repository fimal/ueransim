/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_RRC_CSI_ReportConfig_H_
#define	_RRC_CSI_ReportConfig_H_


#include <asn_application.h>

/* Including external dependencies */
#include "RRC_CSI-ReportConfigId.h"
#include "RRC_ServCellIndex.h"
#include "RRC_CSI-ResourceConfigId.h"
#include <NativeEnumerated.h>
#include "RRC_CSI-ReportPeriodicityAndOffset.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>
#include "RRC_P0-PUSCH-AlphaSetId.h"
#include <NativeInteger.h>
#include <constr_CHOICE.h>
#include <NULL.h>
#include <BIT_STRING.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum RRC_CSI_ReportConfig__reportConfigType_PR {
	RRC_CSI_ReportConfig__reportConfigType_PR_NOTHING,	/* No components present */
	RRC_CSI_ReportConfig__reportConfigType_PR_periodic,
	RRC_CSI_ReportConfig__reportConfigType_PR_semiPersistentOnPUCCH,
	RRC_CSI_ReportConfig__reportConfigType_PR_semiPersistentOnPUSCH,
	RRC_CSI_ReportConfig__reportConfigType_PR_aperiodic
} RRC_CSI_ReportConfig__reportConfigType_PR;
typedef enum RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig {
	RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig_sl5	= 0,
	RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig_sl10	= 1,
	RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig_sl20	= 2,
	RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig_sl40	= 3,
	RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig_sl80	= 4,
	RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig_sl160	= 5,
	RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig_sl320	= 6
} e_RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotConfig;
typedef enum RRC_CSI_ReportConfig__reportQuantity_PR {
	RRC_CSI_ReportConfig__reportQuantity_PR_NOTHING,	/* No components present */
	RRC_CSI_ReportConfig__reportQuantity_PR_none,
	RRC_CSI_ReportConfig__reportQuantity_PR_cri_RI_PMI_CQI,
	RRC_CSI_ReportConfig__reportQuantity_PR_cri_RI_i1,
	RRC_CSI_ReportConfig__reportQuantity_PR_cri_RI_i1_CQI,
	RRC_CSI_ReportConfig__reportQuantity_PR_cri_RI_CQI,
	RRC_CSI_ReportConfig__reportQuantity_PR_cri_RSRP,
	RRC_CSI_ReportConfig__reportQuantity_PR_ssb_Index_RSRP,
	RRC_CSI_ReportConfig__reportQuantity_PR_cri_RI_LI_PMI_CQI
} RRC_CSI_ReportConfig__reportQuantity_PR;
typedef enum RRC_CSI_ReportConfig__reportQuantity__cri_RI_i1_CQI__pdsch_BundleSizeForCSI {
	RRC_CSI_ReportConfig__reportQuantity__cri_RI_i1_CQI__pdsch_BundleSizeForCSI_n2	= 0,
	RRC_CSI_ReportConfig__reportQuantity__cri_RI_i1_CQI__pdsch_BundleSizeForCSI_n4	= 1
} e_RRC_CSI_ReportConfig__reportQuantity__cri_RI_i1_CQI__pdsch_BundleSizeForCSI;
typedef enum RRC_CSI_ReportConfig__reportFreqConfiguration__cqi_FormatIndicator {
	RRC_CSI_ReportConfig__reportFreqConfiguration__cqi_FormatIndicator_widebandCQI	= 0,
	RRC_CSI_ReportConfig__reportFreqConfiguration__cqi_FormatIndicator_subbandCQI	= 1
} e_RRC_CSI_ReportConfig__reportFreqConfiguration__cqi_FormatIndicator;
typedef enum RRC_CSI_ReportConfig__reportFreqConfiguration__pmi_FormatIndicator {
	RRC_CSI_ReportConfig__reportFreqConfiguration__pmi_FormatIndicator_widebandPMI	= 0,
	RRC_CSI_ReportConfig__reportFreqConfiguration__pmi_FormatIndicator_subbandPMI	= 1
} e_RRC_CSI_ReportConfig__reportFreqConfiguration__pmi_FormatIndicator;
typedef enum RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR {
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_NOTHING,	/* No components present */
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands3,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands4,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands5,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands6,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands7,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands8,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands9,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands10,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands11,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands12,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands13,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands14,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands15,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands16,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands17,
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands18,
	/* Extensions may appear below */
	RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR_subbands19_v1530
} RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR;
typedef enum RRC_CSI_ReportConfig__timeRestrictionForChannelMeasurements {
	RRC_CSI_ReportConfig__timeRestrictionForChannelMeasurements_configured	= 0,
	RRC_CSI_ReportConfig__timeRestrictionForChannelMeasurements_notConfigured	= 1
} e_RRC_CSI_ReportConfig__timeRestrictionForChannelMeasurements;
typedef enum RRC_CSI_ReportConfig__timeRestrictionForInterferenceMeasurements {
	RRC_CSI_ReportConfig__timeRestrictionForInterferenceMeasurements_configured	= 0,
	RRC_CSI_ReportConfig__timeRestrictionForInterferenceMeasurements_notConfigured	= 1
} e_RRC_CSI_ReportConfig__timeRestrictionForInterferenceMeasurements;
typedef enum RRC_CSI_ReportConfig__dummy {
	RRC_CSI_ReportConfig__dummy_n1	= 0,
	RRC_CSI_ReportConfig__dummy_n2	= 1
} e_RRC_CSI_ReportConfig__dummy;
typedef enum RRC_CSI_ReportConfig__groupBasedBeamReporting_PR {
	RRC_CSI_ReportConfig__groupBasedBeamReporting_PR_NOTHING,	/* No components present */
	RRC_CSI_ReportConfig__groupBasedBeamReporting_PR_enabled,
	RRC_CSI_ReportConfig__groupBasedBeamReporting_PR_disabled
} RRC_CSI_ReportConfig__groupBasedBeamReporting_PR;
typedef enum RRC_CSI_ReportConfig__groupBasedBeamReporting__disabled__nrofReportedRS {
	RRC_CSI_ReportConfig__groupBasedBeamReporting__disabled__nrofReportedRS_n1	= 0,
	RRC_CSI_ReportConfig__groupBasedBeamReporting__disabled__nrofReportedRS_n2	= 1,
	RRC_CSI_ReportConfig__groupBasedBeamReporting__disabled__nrofReportedRS_n3	= 2,
	RRC_CSI_ReportConfig__groupBasedBeamReporting__disabled__nrofReportedRS_n4	= 3
} e_RRC_CSI_ReportConfig__groupBasedBeamReporting__disabled__nrofReportedRS;
typedef enum RRC_CSI_ReportConfig__cqi_Table {
	RRC_CSI_ReportConfig__cqi_Table_table1	= 0,
	RRC_CSI_ReportConfig__cqi_Table_table2	= 1,
	RRC_CSI_ReportConfig__cqi_Table_table3	= 2,
	RRC_CSI_ReportConfig__cqi_Table_spare1	= 3
} e_RRC_CSI_ReportConfig__cqi_Table;
typedef enum RRC_CSI_ReportConfig__subbandSize {
	RRC_CSI_ReportConfig__subbandSize_value1	= 0,
	RRC_CSI_ReportConfig__subbandSize_value2	= 1
} e_RRC_CSI_ReportConfig__subbandSize;
typedef enum RRC_CSI_ReportConfig__ext1__semiPersistentOnPUSCH_v1530__reportSlotConfig_v1530 {
	RRC_CSI_ReportConfig__ext1__semiPersistentOnPUSCH_v1530__reportSlotConfig_v1530_sl4	= 0,
	RRC_CSI_ReportConfig__ext1__semiPersistentOnPUSCH_v1530__reportSlotConfig_v1530_sl8	= 1,
	RRC_CSI_ReportConfig__ext1__semiPersistentOnPUSCH_v1530__reportSlotConfig_v1530_sl16	= 2
} e_RRC_CSI_ReportConfig__ext1__semiPersistentOnPUSCH_v1530__reportSlotConfig_v1530;

/* Forward declarations */
struct RRC_CodebookConfig;
struct RRC_PUCCH_CSI_Resource;
struct RRC_PortIndexFor8Ranks;

/* RRC_CSI-ReportConfig */
typedef struct RRC_CSI_ReportConfig {
	RRC_CSI_ReportConfigId_t	 reportConfigId;
	RRC_ServCellIndex_t	*carrier;	/* OPTIONAL */
	RRC_CSI_ResourceConfigId_t	 resourcesForChannelMeasurement;
	RRC_CSI_ResourceConfigId_t	*csi_IM_ResourcesForInterference;	/* OPTIONAL */
	RRC_CSI_ResourceConfigId_t	*nzp_CSI_RS_ResourcesForInterference;	/* OPTIONAL */
	struct RRC_CSI_ReportConfig__reportConfigType {
		RRC_CSI_ReportConfig__reportConfigType_PR present;
		union RRC_CSI_ReportConfig__RRC_reportConfigType_u {
			struct RRC_CSI_ReportConfig__reportConfigType__periodic {
				RRC_CSI_ReportPeriodicityAndOffset_t	 reportSlotConfig;
				struct RRC_CSI_ReportConfig__reportConfigType__periodic__pucch_CSI_ResourceList {
					A_SEQUENCE_OF(struct RRC_PUCCH_CSI_Resource) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} pucch_CSI_ResourceList;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *periodic;
			struct RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUCCH {
				RRC_CSI_ReportPeriodicityAndOffset_t	 reportSlotConfig;
				struct RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUCCH__pucch_CSI_ResourceList {
					A_SEQUENCE_OF(struct RRC_PUCCH_CSI_Resource) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} pucch_CSI_ResourceList;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *semiPersistentOnPUCCH;
			struct RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH {
				long	 reportSlotConfig;
				struct RRC_CSI_ReportConfig__reportConfigType__semiPersistentOnPUSCH__reportSlotOffsetList {
					A_SEQUENCE_OF(long) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} reportSlotOffsetList;
				RRC_P0_PUSCH_AlphaSetId_t	 p0alpha;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *semiPersistentOnPUSCH;
			struct RRC_CSI_ReportConfig__reportConfigType__aperiodic {
				struct RRC_CSI_ReportConfig__reportConfigType__aperiodic__reportSlotOffsetList {
					A_SEQUENCE_OF(long) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} reportSlotOffsetList;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *aperiodic;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} reportConfigType;
	struct RRC_CSI_ReportConfig__reportQuantity {
		RRC_CSI_ReportConfig__reportQuantity_PR present;
		union RRC_CSI_ReportConfig__RRC_reportQuantity_u {
			NULL_t	 none;
			NULL_t	 cri_RI_PMI_CQI;
			NULL_t	 cri_RI_i1;
			struct RRC_CSI_ReportConfig__reportQuantity__cri_RI_i1_CQI {
				long	*pdsch_BundleSizeForCSI;	/* OPTIONAL */
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *cri_RI_i1_CQI;
			NULL_t	 cri_RI_CQI;
			NULL_t	 cri_RSRP;
			NULL_t	 ssb_Index_RSRP;
			NULL_t	 cri_RI_LI_PMI_CQI;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} reportQuantity;
	struct RRC_CSI_ReportConfig__reportFreqConfiguration {
		long	*cqi_FormatIndicator;	/* OPTIONAL */
		long	*pmi_FormatIndicator;	/* OPTIONAL */
		struct RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand {
			RRC_CSI_ReportConfig__reportFreqConfiguration__csi_ReportingBand_PR present;
			union RRC_CSI_ReportConfig__RRC_reportFreqConfiguration__RRC_csi_ReportingBand_u {
				BIT_STRING_t	 subbands3;
				BIT_STRING_t	 subbands4;
				BIT_STRING_t	 subbands5;
				BIT_STRING_t	 subbands6;
				BIT_STRING_t	 subbands7;
				BIT_STRING_t	 subbands8;
				BIT_STRING_t	 subbands9;
				BIT_STRING_t	 subbands10;
				BIT_STRING_t	 subbands11;
				BIT_STRING_t	 subbands12;
				BIT_STRING_t	 subbands13;
				BIT_STRING_t	 subbands14;
				BIT_STRING_t	 subbands15;
				BIT_STRING_t	 subbands16;
				BIT_STRING_t	 subbands17;
				BIT_STRING_t	 subbands18;
				/*
				 * This type is extensible,
				 * possible extensions are below.
				 */
				BIT_STRING_t	 subbands19_v1530;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *csi_ReportingBand;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *reportFreqConfiguration;
	long	 timeRestrictionForChannelMeasurements;
	long	 timeRestrictionForInterferenceMeasurements;
	struct RRC_CodebookConfig	*codebookConfig;	/* OPTIONAL */
	long	*dummy;	/* OPTIONAL */
	struct RRC_CSI_ReportConfig__groupBasedBeamReporting {
		RRC_CSI_ReportConfig__groupBasedBeamReporting_PR present;
		union RRC_CSI_ReportConfig__RRC_groupBasedBeamReporting_u {
			NULL_t	 enabled;
			struct RRC_CSI_ReportConfig__groupBasedBeamReporting__disabled {
				long	*nrofReportedRS;	/* OPTIONAL */
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *disabled;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} groupBasedBeamReporting;
	long	*cqi_Table;	/* OPTIONAL */
	long	 subbandSize;
	struct RRC_CSI_ReportConfig__non_PMI_PortIndication {
		A_SEQUENCE_OF(struct RRC_PortIndexFor8Ranks) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *non_PMI_PortIndication;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct RRC_CSI_ReportConfig__ext1 {
		struct RRC_CSI_ReportConfig__ext1__semiPersistentOnPUSCH_v1530 {
			long	 reportSlotConfig_v1530;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *semiPersistentOnPUSCH_v1530;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} RRC_CSI_ReportConfig_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_reportSlotConfig_17;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_pdsch_BundleSizeForCSI_36;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_cqi_FormatIndicator_44;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_pmi_FormatIndicator_47;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_timeRestrictionForChannelMeasurements_69;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_timeRestrictionForInterferenceMeasurements_72;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_dummy_76;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_nrofReportedRS_82;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_cqi_Table_87;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_subbandSize_92;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_reportSlotConfig_v1530_100;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_RRC_CSI_ReportConfig;
extern asn_SEQUENCE_specifics_t asn_SPC_RRC_CSI_ReportConfig_specs_1;
extern asn_TYPE_member_t asn_MBR_RRC_CSI_ReportConfig_1[17];

#ifdef __cplusplus
}
#endif

#endif	/* _RRC_CSI_ReportConfig_H_ */
#include <asn_internal.h>
