/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_RRC_RACH_ConfigGeneric_H_
#define	_RRC_RACH_ConfigGeneric_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum RRC_RACH_ConfigGeneric__msg1_FDM {
	RRC_RACH_ConfigGeneric__msg1_FDM_one	= 0,
	RRC_RACH_ConfigGeneric__msg1_FDM_two	= 1,
	RRC_RACH_ConfigGeneric__msg1_FDM_four	= 2,
	RRC_RACH_ConfigGeneric__msg1_FDM_eight	= 3
} e_RRC_RACH_ConfigGeneric__msg1_FDM;
typedef enum RRC_RACH_ConfigGeneric__preambleTransMax {
	RRC_RACH_ConfigGeneric__preambleTransMax_n3	= 0,
	RRC_RACH_ConfigGeneric__preambleTransMax_n4	= 1,
	RRC_RACH_ConfigGeneric__preambleTransMax_n5	= 2,
	RRC_RACH_ConfigGeneric__preambleTransMax_n6	= 3,
	RRC_RACH_ConfigGeneric__preambleTransMax_n7	= 4,
	RRC_RACH_ConfigGeneric__preambleTransMax_n8	= 5,
	RRC_RACH_ConfigGeneric__preambleTransMax_n10	= 6,
	RRC_RACH_ConfigGeneric__preambleTransMax_n20	= 7,
	RRC_RACH_ConfigGeneric__preambleTransMax_n50	= 8,
	RRC_RACH_ConfigGeneric__preambleTransMax_n100	= 9,
	RRC_RACH_ConfigGeneric__preambleTransMax_n200	= 10
} e_RRC_RACH_ConfigGeneric__preambleTransMax;
typedef enum RRC_RACH_ConfigGeneric__powerRampingStep {
	RRC_RACH_ConfigGeneric__powerRampingStep_dB0	= 0,
	RRC_RACH_ConfigGeneric__powerRampingStep_dB2	= 1,
	RRC_RACH_ConfigGeneric__powerRampingStep_dB4	= 2,
	RRC_RACH_ConfigGeneric__powerRampingStep_dB6	= 3
} e_RRC_RACH_ConfigGeneric__powerRampingStep;
typedef enum RRC_RACH_ConfigGeneric__ra_ResponseWindow {
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl1	= 0,
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl2	= 1,
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl4	= 2,
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl8	= 3,
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl10	= 4,
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl20	= 5,
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl40	= 6,
	RRC_RACH_ConfigGeneric__ra_ResponseWindow_sl80	= 7
} e_RRC_RACH_ConfigGeneric__ra_ResponseWindow;

/* RRC_RACH-ConfigGeneric */
typedef struct RRC_RACH_ConfigGeneric {
	long	 prach_ConfigurationIndex;
	long	 msg1_FDM;
	long	 msg1_FrequencyStart;
	long	 zeroCorrelationZoneConfig;
	long	 preambleReceivedTargetPower;
	long	 preambleTransMax;
	long	 powerRampingStep;
	long	 ra_ResponseWindow;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} RRC_RACH_ConfigGeneric_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_msg1_FDM_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_preambleTransMax_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_powerRampingStep_23;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_RRC_ra_ResponseWindow_28;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_RRC_RACH_ConfigGeneric;
extern asn_SEQUENCE_specifics_t asn_SPC_RRC_RACH_ConfigGeneric_specs_1;
extern asn_TYPE_member_t asn_MBR_RRC_RACH_ConfigGeneric_1[8];

#ifdef __cplusplus
}
#endif

#endif	/* _RRC_RACH_ConfigGeneric_H_ */
#include <asn_internal.h>
