/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "asn/nr-rrc-15.6.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D rrc`
 */

#ifndef	_RRC_UE_NR_Capability_H_
#define	_RRC_UE_NR_Capability_H_


#include <asn_application.h>

/* Including external dependencies */
#include "RRC_AccessStratumRelease.h"
#include "RRC_PDCP-Parameters.h"
#include "RRC_Phy-Parameters.h"
#include "RRC_RF-Parameters.h"
#include <OCTET_STRING.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct RRC_RLC_Parameters;
struct RRC_MAC_Parameters;
struct RRC_MeasAndMobParameters;
struct RRC_UE_NR_CapabilityAddXDD_Mode;
struct RRC_UE_NR_CapabilityAddFRX_Mode;
struct RRC_FeatureSets;
struct RRC_UE_NR_Capability_v1530;
struct RRC_FeatureSetCombination;

/* RRC_UE-NR-Capability */
typedef struct RRC_UE_NR_Capability {
	RRC_AccessStratumRelease_t	 accessStratumRelease;
	RRC_PDCP_Parameters_t	 pdcp_Parameters;
	struct RRC_RLC_Parameters	*rlc_Parameters;	/* OPTIONAL */
	struct RRC_MAC_Parameters	*mac_Parameters;	/* OPTIONAL */
	RRC_Phy_Parameters_t	 phy_Parameters;
	RRC_RF_Parameters_t	 rf_Parameters;
	struct RRC_MeasAndMobParameters	*measAndMobParameters;	/* OPTIONAL */
	struct RRC_UE_NR_CapabilityAddXDD_Mode	*fdd_Add_UE_NR_Capabilities;	/* OPTIONAL */
	struct RRC_UE_NR_CapabilityAddXDD_Mode	*tdd_Add_UE_NR_Capabilities;	/* OPTIONAL */
	struct RRC_UE_NR_CapabilityAddFRX_Mode	*fr1_Add_UE_NR_Capabilities;	/* OPTIONAL */
	struct RRC_UE_NR_CapabilityAddFRX_Mode	*fr2_Add_UE_NR_Capabilities;	/* OPTIONAL */
	struct RRC_FeatureSets	*featureSets;	/* OPTIONAL */
	struct RRC_UE_NR_Capability__featureSetCombinations {
		A_SEQUENCE_OF(struct RRC_FeatureSetCombination) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *featureSetCombinations;
	OCTET_STRING_t	*lateNonCriticalExtension;	/* OPTIONAL */
	struct RRC_UE_NR_Capability_v1530	*nonCriticalExtension;	/* OPTIONAL */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} RRC_UE_NR_Capability_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_RRC_UE_NR_Capability;

#ifdef __cplusplus
}
#endif

#endif	/* _RRC_UE_NR_Capability_H_ */
#include <asn_internal.h>
